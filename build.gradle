plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.session.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.1.0.RELEASE'
	implementation 'org.modelmapper:modelmapper:2.3.0'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.junit.jupiter:junit-jupiter:5.4.2'
    testCompile 'org.mockito:mockito-core:2.28.2'
    testCompile 'org.mockito:mockito-junit-jupiter:2.28.2'
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.4"
}

subprojects {
	jacocoTestReport {
		reports {
			html.enabled = true
			xml.enabled = true
			csv.enabled = false
		}
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.3
			}
		}
	}
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

def profiles = 'dev'

bootRun {
	args = ["--spring.profiles.active=" + profiles]
}
